"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.SequencerAPIResponseParser = void 0;
var number_1 = require("../number");
var _1 = require(".");
var SequencerAPIResponseParser = /** @class */ (function (_super) {
    __extends(SequencerAPIResponseParser, _super);
    function SequencerAPIResponseParser() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    SequencerAPIResponseParser.prototype.parseGetBlockResponse = function (res) {
        return {
            accepted_time: res.timestamp,
            block_hash: res.block_hash,
            block_number: res.block_number,
            gas_price: res.gas_price,
            new_root: res.state_root,
            old_root: undefined,
            parent_hash: res.parent_block_hash,
            sequencer: res.sequencer_address,
            status: res.status,
            transactions: Object.values(res.transactions)
                .map(function (value) { return 'transaction_hash' in value && value.transaction_hash; })
                .filter(Boolean),
        };
    };
    SequencerAPIResponseParser.prototype.parseGetTransactionResponse = function (res) {
        return {
            calldata: 'calldata' in res.transaction ? res.transaction.calldata : [],
            contract_address: 'contract_address' in res.transaction ? res.transaction.contract_address : undefined,
            contract_class: 'contract_class' in res.transaction ? res.transaction.contract_class : undefined,
            entry_point_selector: 'entry_point_selector' in res.transaction
                ? res.transaction.entry_point_selector
                : undefined,
            max_fee: 'max_fee' in res.transaction ? res.transaction.max_fee : undefined,
            nonce: res.transaction.nonce,
            sender_address: 'sender_address' in res.transaction
                ? res.transaction.sender_address
                : undefined,
            signature: 'signature' in res.transaction ? res.transaction.signature : undefined,
            transaction_hash: 'transaction_hash' in res.transaction ? res.transaction.transaction_hash : undefined,
            version: 'version' in res.transaction ? res.transaction.version : undefined,
        };
    };
    SequencerAPIResponseParser.prototype.parseGetTransactionReceiptResponse = function (res) {
        return {
            transaction_hash: res.transaction_hash,
            actual_fee: 'actual_fee' in res ? res.actual_fee : undefined,
            status: res.status,
            status_data: undefined,
            messages_sent: res.l2_to_l1_messages,
            events: res.events,
            l1_origin_message: undefined,
        };
    };
    SequencerAPIResponseParser.prototype.parseGetCodeResponse = function (res) {
        return res;
    };
    SequencerAPIResponseParser.prototype.parseFeeEstimateResponse = function (res) {
        if ('overall_fee' in res) {
            var gasInfo = {};
            try {
                gasInfo = {
                    gas_consumed: (0, number_1.toBN)(res.gas_usage),
                    gas_price: (0, number_1.toBN)(res.gas_price),
                };
            }
            catch (_a) {
                // do nothing
            }
            return __assign({ overall_fee: (0, number_1.toBN)(res.overall_fee) }, gasInfo);
        }
        return {
            overall_fee: (0, number_1.toBN)(res.amount),
        };
    };
    SequencerAPIResponseParser.prototype.parseCallContractResponse = function (res) {
        return {
            result: res.result,
        };
    };
    SequencerAPIResponseParser.prototype.parseInvokeFunctionResponse = function (res) {
        return {
            transaction_hash: res.transaction_hash,
        };
    };
    SequencerAPIResponseParser.prototype.parseDeployContractResponse = function (res) {
        return {
            transaction_hash: res.transaction_hash,
            contract_address: res.address,
        };
    };
    SequencerAPIResponseParser.prototype.parseDeclareContractResponse = function (res) {
        return {
            transaction_hash: res.transaction_hash,
            class_hash: res.class_hash,
        };
    };
    return SequencerAPIResponseParser;
}(_1.ResponseParser));
exports.SequencerAPIResponseParser = SequencerAPIResponseParser;
